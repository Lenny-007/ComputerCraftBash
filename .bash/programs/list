
local tArgs  = { ... }

-- Get all the files in the directory
local sDir   = shell.dir()
if tArgs[1] ~= nil then
	sDir = shell.resolve( tArgs[1] )
end

-- Sort into dirs/files, and calculate column count
local tAll   = fs.list( sDir )
local tFiles = {}
local tDirs  = {}

if tArgs[2] == "-h" or userlib.getUser() == "ROOT" then
  table.insert(tDirs,".")
  table.insert(tDirs,"..")
end

for n, sItem in pairs( tAll ) do
  if userlib.getUser() == "ROOT" then
    local sPath = fs.combine(sDir,sItem)
    if fs.isDir(sPath) then
      table.insert(tDirs,sItem)
    else
      table.insert(tFiles,sItem)
    end
  else
  	 if string.sub( sItem, 1, 1 ) ~= "." then
    		local sPath = fs.combine( sDir, sItem )
    		if fs.isDir( sPath ) then
    			 table.insert( tDirs, sItem )
      else
        if sItem == "startup" and sDir == "" then
          if tArgs[2] == "-h" then
            table.insert(tFiles,sItem)
          end
        else		
        	 table.insert( tFiles, sItem )
        end
    		end
   	elseif tArgs[2] == "-h" then
      if string.sub(sItem,1,2) ~= ".~" then
        local sPath = fs.combine(sDir,sItem)
        if fs.isDir(sPath) then
          table.insert(tDirs,sItem)
        else
          table.insert(tFiles,sItem)
        end
      end
    end
  end
end

table.sort( tDirs )
table.sort( tFiles )

if term.isColour() then
 	textutils.pagedTabulate( colors.cyan, tDirs, colors.white, tFiles )
else
	 textutils.pagedTabulate( tDirs, tFiles )
end

if #tDirs == 0 and #tFiles == 0 then
  bash.console_print("empty directory")
end
